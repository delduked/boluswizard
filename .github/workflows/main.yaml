name: production deployment
on:
  push:
    branches:
      - main

jobs:
  ui:
    runs-on: [self-hosted, nated-7]
    steps:
      - uses: actions/checkout@v3
      - name: Build Go UI image
        run : |
          echo "building boluswizard/ui image"
          export CR_PAT=${{ secrets.ALL_ACCESS_PAT }} ; echo $CR_PAT | docker login ghcr.io -u delduked --password-stdin
          docker build -t ghcr.io/delduked/boluswizard/ui:v$(cat ./VERSION) ./ui -f ./ui/ui.dockerfile
          docker push ghcr.io/delduked/boluswizard/ui:v$(cat ./VERSION)
          echo "image boluswizard/ui was built succesfully."
  api:
    runs-on: [self-hosted, nated-7]
    needs: ui
    steps:
      - uses: actions/checkout@v3
      - name: Build Go API image
        run : |
          echo "building boluswizard/api image"
          export CR_PAT=${{ secrets.ALL_ACCESS_PAT }} ; echo $CR_PAT | docker login ghcr.io -u delduked --password-stdin
          docker build -t ghcr.io/delduked/boluswizard/api:v$(cat ./VERSION) ./api -f ./api/api.dockerfile
          docker push ghcr.io/delduked/boluswizard/api:v$(cat ./VERSION)
          echo "image boluswizard/api was built succesfully."
  deploy:
    runs-on: [self-hosted, nated-8]
    needs: [ui,api]
    steps:
      - uses: actions/checkout@v3
      - id: get_version
        run: |
          echo "VERSION=$(cat ./VERSION)" >> $GITHUB_OUTPUT
      - name: Helm Deploy
        uses: vimeda/helm@v1.6.8
        with:
          token: ${{ secrets.ALL_ACCESS_PAT }}
          release: $(cat ./VERSION)
          chart: 'charts'
          values-files: "./charts/dev.yaml"
          values: |
            VERSION: ${{ steps.get_version.outputs.VERSION }}
        env: 
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'