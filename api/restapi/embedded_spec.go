// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "BolusWizard",
    "version": "1.0"
  },
  "paths": {
    "/SignIn": {
      "post": {
        "summary": "Sign In",
        "operationId": "signIn",
        "parameters": [
          {
            "name": "signInData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/Token"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/SignUp": {
      "post": {
        "summary": "Sign Up",
        "operationId": "signUp",
        "parameters": [
          {
            "name": "signUpData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/Token"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Health"
                }
              ]
            }
          }
        }
      }
    },
    "/wizard/CorrectionRange": {
      "get": {
        "summary": "get correction range",
        "operationId": "correctionRange",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "Start",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "End",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Correction"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Duration": {
      "get": {
        "summary": "Get Duration",
        "operationId": "getDuration",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "string"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Duration",
        "operationId": "createDuration",
        "parameters": [
          {
            "name": "Duration",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Duration": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/ISFs": {
      "get": {
        "summary": "Get ISFs",
        "operationId": "getISFs",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ISF"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create ISF",
        "operationId": "createISFs",
        "parameters": [
          {
            "name": "ISFs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ISF"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/NewCorrection": {
      "get": {
        "summary": "New Correction",
        "operationId": "newCorrection",
        "parameters": [
          {
            "type": "number",
            "format": "float64",
            "name": "Bg",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "float64",
            "name": "Carbs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/CorrectionResponse"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Ratios": {
      "get": {
        "summary": "Get Ratios",
        "operationId": "getRatios",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarbRatio"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Carb Ratios",
        "operationId": "createRatios",
        "parameters": [
          {
            "name": "carbRatios",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarbRatio"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "description": "status code",
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Targets": {
      "get": {
        "summary": "Get Targets",
        "operationId": "getTargets",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Target"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Target Ratios",
        "operationId": "createTargets",
        "parameters": [
          {
            "name": "targetRatios",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Target"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/corrections": {
      "get": {
        "summary": "Get Corrections",
        "operationId": "getCorrections",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Correction"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Corrections",
        "operationId": "createCorrections",
        "parameters": [
          {
            "name": "corrections",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Correction"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveInsulinDuration": {
      "type": "object",
      "properties": {
        "Duration": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Duration\""
        }
      }
    },
    "CarbRatio": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Ratio": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Ratio\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "Correction": {
      "type": "object",
      "properties": {
        "Bg": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bg\"",
          "x-nullable": true
        },
        "Bolus": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bolus\"",
          "x-nullable": true
        },
        "Carbs": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Carbs\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string"
        },
        "TimeStamp": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"TimeStamp\"",
          "x-nullable": true
        }
      }
    },
    "CorrectionRange": {
      "type": "object",
      "properties": {
        "End": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Start": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "CorrectionResponse": {
      "type": "object",
      "properties": {
        "ActiveInsulinReduction": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"ActiveInsulinReduction\"",
          "x-nullable": true
        },
        "BgCorrection": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"BgCorrection\"",
          "x-nullable": true
        },
        "Bolus": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bolus\"",
          "x-nullable": true
        },
        "CarbCorrection": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"CarbCorrection\"",
          "x-nullable": true
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "object",
          "x-nullable": true
        },
        "Status": {
          "type": "integer"
        },
        "Timestamp": {
          "type": "object"
        }
      }
    },
    "ISF": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Sensitivity": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Sensitivity\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "object",
          "x-nullable": true
        },
        "Status": {
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ResponseData": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object"
        },
        "Error": {
          "type": "object"
        },
        "Status": {
          "type": "integer"
        }
      }
    },
    "Sign": {
      "type": "object",
      "properties": {
        "Password": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Password\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    },
    "Target": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "High": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"High\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Ratio": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Ratio\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        },
        "low": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"low\"",
          "x-nullable": true
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Token\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "Password": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Password\""
        },
        "Uid": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Uid\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "BolusWizard",
    "version": "1.0"
  },
  "paths": {
    "/SignIn": {
      "post": {
        "summary": "Sign In",
        "operationId": "signIn",
        "parameters": [
          {
            "name": "signInData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/Token"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/SignUp": {
      "post": {
        "summary": "Sign Up",
        "operationId": "signUp",
        "parameters": [
          {
            "name": "signUpData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/Token"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Health"
                }
              ]
            }
          }
        }
      }
    },
    "/wizard/CorrectionRange": {
      "get": {
        "summary": "get correction range",
        "operationId": "correctionRange",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "Start",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "End",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Correction"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Duration": {
      "get": {
        "summary": "Get Duration",
        "operationId": "getDuration",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "string"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Duration",
        "operationId": "createDuration",
        "parameters": [
          {
            "name": "Duration",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Duration": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/ISFs": {
      "get": {
        "summary": "Get ISFs",
        "operationId": "getISFs",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ISF"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create ISF",
        "operationId": "createISFs",
        "parameters": [
          {
            "name": "ISFs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ISF"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/NewCorrection": {
      "get": {
        "summary": "New Correction",
        "operationId": "newCorrection",
        "parameters": [
          {
            "type": "number",
            "format": "float64",
            "name": "Bg",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "format": "float64",
            "name": "Carbs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "$ref": "#/definitions/CorrectionResponse"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Ratios": {
      "get": {
        "summary": "Get Ratios",
        "operationId": "getRatios",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarbRatio"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Carb Ratios",
        "operationId": "createRatios",
        "parameters": [
          {
            "name": "carbRatios",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarbRatio"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "description": "status code",
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/Targets": {
      "get": {
        "summary": "Get Targets",
        "operationId": "getTargets",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Target"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Target Ratios",
        "operationId": "createTargets",
        "parameters": [
          {
            "name": "targetRatios",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Target"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "object"
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/wizard/corrections": {
      "get": {
        "summary": "Get Corrections",
        "operationId": "getCorrections",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "Data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Correction"
                  }
                },
                "Error": {
                  "type": "object"
                },
                "Status": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      },
      "post": {
        "summary": "Create Corrections",
        "operationId": "createCorrections",
        "parameters": [
          {
            "name": "corrections",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Correction"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "default": {
            "description": "Unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveInsulinDuration": {
      "type": "object",
      "properties": {
        "Duration": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Duration\""
        }
      }
    },
    "CarbRatio": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Ratio": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Ratio\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "Correction": {
      "type": "object",
      "properties": {
        "Bg": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bg\"",
          "x-nullable": true
        },
        "Bolus": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bolus\"",
          "x-nullable": true
        },
        "Carbs": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Carbs\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string"
        },
        "TimeStamp": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"TimeStamp\"",
          "x-nullable": true
        }
      }
    },
    "CorrectionRange": {
      "type": "object",
      "properties": {
        "End": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Start": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "CorrectionResponse": {
      "type": "object",
      "properties": {
        "ActiveInsulinReduction": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"ActiveInsulinReduction\"",
          "x-nullable": true
        },
        "BgCorrection": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"BgCorrection\"",
          "x-nullable": true
        },
        "Bolus": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Bolus\"",
          "x-nullable": true
        },
        "CarbCorrection": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"CarbCorrection\"",
          "x-nullable": true
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "object",
          "x-nullable": true
        },
        "Status": {
          "type": "integer"
        },
        "Timestamp": {
          "type": "object"
        }
      }
    },
    "ISF": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Sensitivity": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Sensitivity\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "Error": {
          "type": "object",
          "x-nullable": true
        },
        "Status": {
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ResponseData": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object"
        },
        "Error": {
          "type": "object"
        },
        "Status": {
          "type": "integer"
        }
      }
    },
    "Sign": {
      "type": "object",
      "properties": {
        "Password": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Password\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    },
    "Target": {
      "type": "object",
      "properties": {
        "End": {
          "type": "string",
          "x-go-custom-tag": "redis:\"End\"",
          "x-nullable": true
        },
        "High": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"High\"",
          "x-nullable": true
        },
        "Key": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Key\"",
          "x-nullable": true
        },
        "Ratio": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"Ratio\"",
          "x-nullable": true
        },
        "Start": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Start\"",
          "x-nullable": true
        },
        "low": {
          "type": "number",
          "format": "float64",
          "x-go-custom-tag": "redis:\"low\"",
          "x-nullable": true
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Token\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "Password": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Password\""
        },
        "Uid": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Uid\""
        },
        "Username": {
          "type": "string",
          "x-go-custom-tag": "redis:\"Username\""
        }
      }
    }
  }
}`))
}
