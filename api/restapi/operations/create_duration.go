// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateDurationHandlerFunc turns a function with the right signature into a create duration handler
type CreateDurationHandlerFunc func(CreateDurationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateDurationHandlerFunc) Handle(params CreateDurationParams) middleware.Responder {
	return fn(params)
}

// CreateDurationHandler interface for that can handle valid create duration params
type CreateDurationHandler interface {
	Handle(CreateDurationParams) middleware.Responder
}

// NewCreateDuration creates a new http.Handler for the create duration operation
func NewCreateDuration(ctx *middleware.Context, handler CreateDurationHandler) *CreateDuration {
	return &CreateDuration{Context: ctx, Handler: handler}
}

/*
	CreateDuration swagger:route POST /Duration createDuration

Create Duration
*/
type CreateDuration struct {
	Context *middleware.Context
	Handler CreateDurationHandler
}

func (o *CreateDuration) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateDurationParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// CreateDurationBody create duration body
//
// swagger:model CreateDurationBody
type CreateDurationBody struct {

	// duration
	Duration string `json:"Duration,omitempty"`
}

// Validate validates this create duration body
func (o *CreateDurationBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create duration body based on context it is used
func (o *CreateDurationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDurationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDurationBody) UnmarshalBinary(b []byte) error {
	var res CreateDurationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// CreateDurationOKBody create duration o k body
//
// swagger:model CreateDurationOKBody
type CreateDurationOKBody struct {

	// data
	Data interface{} `json:"Data,omitempty"`

	// error
	Error interface{} `json:"Error,omitempty"`

	// status
	Status int64 `json:"Status,omitempty"`
}

// Validate validates this create duration o k body
func (o *CreateDurationOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create duration o k body based on context it is used
func (o *CreateDurationOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDurationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDurationOKBody) UnmarshalBinary(b []byte) error {
	var res CreateDurationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
