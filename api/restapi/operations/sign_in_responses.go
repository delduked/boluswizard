// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"boluswizard/models"
)

// SignInOKCode is the HTTP code returned for type SignInOK
const SignInOKCode int = 200

/*
SignInOK Successful operation

swagger:response signInOK
*/
type SignInOK struct {

	/*
	  In: Body
	*/
	Payload *SignInOKBody `json:"body,omitempty"`
}

// NewSignInOK creates SignInOK with default headers values
func NewSignInOK() *SignInOK {

	return &SignInOK{}
}

// WithPayload adds the payload to the sign in o k response
func (o *SignInOK) WithPayload(payload *SignInOKBody) *SignInOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign in o k response
func (o *SignInOK) SetPayload(payload *SignInOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignInOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
SignInDefault Unsuccessful operation

swagger:response signInDefault
*/
type SignInDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewSignInDefault creates SignInDefault with default headers values
func NewSignInDefault(code int) *SignInDefault {
	if code <= 0 {
		code = 500
	}

	return &SignInDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the sign in default response
func (o *SignInDefault) WithStatusCode(code int) *SignInDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the sign in default response
func (o *SignInDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the sign in default response
func (o *SignInDefault) WithPayload(payload *models.Response) *SignInDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign in default response
func (o *SignInDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignInDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
