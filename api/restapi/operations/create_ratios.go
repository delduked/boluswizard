// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateRatiosHandlerFunc turns a function with the right signature into a create ratios handler
type CreateRatiosHandlerFunc func(CreateRatiosParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateRatiosHandlerFunc) Handle(params CreateRatiosParams) middleware.Responder {
	return fn(params)
}

// CreateRatiosHandler interface for that can handle valid create ratios params
type CreateRatiosHandler interface {
	Handle(CreateRatiosParams) middleware.Responder
}

// NewCreateRatios creates a new http.Handler for the create ratios operation
func NewCreateRatios(ctx *middleware.Context, handler CreateRatiosHandler) *CreateRatios {
	return &CreateRatios{Context: ctx, Handler: handler}
}

/*
	CreateRatios swagger:route POST /wizard/ratios createRatios

Create Carb Ratios
*/
type CreateRatios struct {
	Context *middleware.Context
	Handler CreateRatiosHandler
}

func (o *CreateRatios) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateRatiosParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// CreateRatiosOKBody create ratios o k body
//
// swagger:model CreateRatiosOKBody
type CreateRatiosOKBody struct {

	// data
	Data interface{} `json:"Data,omitempty"`

	// error
	Error interface{} `json:"Error,omitempty"`

	// status code
	Status int64 `json:"Status,omitempty"`
}

// Validate validates this create ratios o k body
func (o *CreateRatiosOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create ratios o k body based on context it is used
func (o *CreateRatiosOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRatiosOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRatiosOKBody) UnmarshalBinary(b []byte) error {
	var res CreateRatiosOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
