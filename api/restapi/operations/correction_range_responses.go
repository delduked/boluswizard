// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"boluswizard/models"
)

// CorrectionRangeOKCode is the HTTP code returned for type CorrectionRangeOK
const CorrectionRangeOKCode int = 200

/*
CorrectionRangeOK Successful operation

swagger:response correctionRangeOK
*/
type CorrectionRangeOK struct {

	/*
	  In: Body
	*/
	Payload *CorrectionRangeOKBody `json:"body,omitempty"`
}

// NewCorrectionRangeOK creates CorrectionRangeOK with default headers values
func NewCorrectionRangeOK() *CorrectionRangeOK {

	return &CorrectionRangeOK{}
}

// WithPayload adds the payload to the correction range o k response
func (o *CorrectionRangeOK) WithPayload(payload *CorrectionRangeOKBody) *CorrectionRangeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the correction range o k response
func (o *CorrectionRangeOK) SetPayload(payload *CorrectionRangeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CorrectionRangeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CorrectionRangeDefault Unsuccessful operation

swagger:response correctionRangeDefault
*/
type CorrectionRangeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewCorrectionRangeDefault creates CorrectionRangeDefault with default headers values
func NewCorrectionRangeDefault(code int) *CorrectionRangeDefault {
	if code <= 0 {
		code = 500
	}

	return &CorrectionRangeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the correction range default response
func (o *CorrectionRangeDefault) WithStatusCode(code int) *CorrectionRangeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the correction range default response
func (o *CorrectionRangeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the correction range default response
func (o *CorrectionRangeDefault) WithPayload(payload *models.Response) *CorrectionRangeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the correction range default response
func (o *CorrectionRangeDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CorrectionRangeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
